---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-rbac-app
  labels:
    app: kube-rbac-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-rbac-app
  template:
    metadata:
      labels:
        app: kube-rbac-app
    spec:
      serviceAccountName: kube-rbac-proxy
      containers:
        - name: che-auth-testapp
          image: quay.io/mvala/che-auth-testapp:latest
          imagePullPolicy: Always
          command: ["/opt/che-auth-testapp/che-auth-testapp"]
          args:
            - "--bind=127.0.0.1:8081"
          resources:
            requests:
              memory: "32Mi"
              cpu: "100m"
            limits:
              memory: "32Mi"
              cpu: "100m"
        - name: kube-rbac-proxy
          image: quay.io/mvala/kube-rbac-proxy:pass-bearer-token
          command: ["kube-rbac-proxy"]
          args:
          - "--insecure-listen-address=0.0.0.0:8080"
          - "--upstream=http://127.0.0.1:8081/"
          - "--config-file=/etc/kube-rbac-proxy/config-file.yaml"
          - "--auth-header-fields-enabled"
          - "--auth-header-pass-bearer"
          - "--logtostderr=true"
          - "--v=10"
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"
          ports:
            - containerPort: 8080
          volumeMounts:
          - name: config
            mountPath: /etc/kube-rbac-proxy
      volumes:
      - name: config
        configMap:
          name: kube-rbac-proxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-rbac-proxy
data:
  config-file.yaml: |+
    authorization:
      resourceAttributes:
        apiVersion: v1
        resource: services
        subresource: proxy
        namespace: "{{NAMESPACE}}"
---
kind: Service
apiVersion: v1
metadata:
  name: kube-rbac-app
spec:
  selector:
    app: kube-rbac-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: kube-rbac-app
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
spec:
  rules:
    - host: {{NAMESPACE}}-kube-rbac-app.{{MINIKUBE_IP}}.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-rbac-app
                port:
                  number: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-rbac-proxy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{NAMESPACE}}-kube-rbac-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: che-kube-rbac-proxy
subjects:
- kind: ServiceAccount
  name: kube-rbac-proxy
  namespace: {{NAMESPACE}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: che-kube-rbac-proxy
rules:
- apiGroups: ["authentication.k8s.io"]
  resources:
  - tokenreviews
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources:
  - subjectaccessreviews
  verbs: ["create"]
